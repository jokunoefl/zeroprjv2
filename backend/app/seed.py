from sqlalchemy.orm import Session
from .models import Question, MathTopic

def seed_basic(db: Session):
    if db.query(Question).count() > 0:
        return
    samples = [
        dict(subject="算数", topic="割合", text="仕入れ値に20%の利益で販売価格は1,200円。仕入れ値は？", hint="販売=仕入×1.2", correct="1000", unit="円"),
        dict(subject="算数", topic="割合（応用）", text="原価の25%利益で販売1,250円。原価は？", hint="販売=原価×1.25", correct="1000", unit="円"),
    ]
    for s in samples:
        db.add(Question(**s))
    db.commit()

def seed_math_topics(db: Session):
    if db.query(MathTopic).count() > 0:
        return
    rows = [
        (1, "整数の範囲（位取り、四捨五入、概数）", "基礎"),
        (2, "小数（位の理解、四捨五入、近似値）", "基礎"),
        (3, "分数（真分数、仮分数、帯分数、大小比較）", "基礎"),
        (4, "倍数・約数、公約数・公倍数", "基礎"),
        (5, "素数・素因数分解", "応用"),
        (6, "最小公倍数・最大公約数の活用", "応用"),
        (7, "整数の性質（偶奇、余り、倍数判定）", "応用"),
        (8, "筆算（整数、小数、分数）", "基礎"),
        (9, "分数と小数の混合計算", "応用"),
        (10, "加減乗除の混合算（かっこ付き計算）", "基礎"),
        (11, "割合・比を含む計算", "応用"),
        (12, "正負の数（基本計算）", "発展"),
        (13, "まとめて計算（分配法則、交換法則）", "基礎"),
        (14, "約分と通分の工夫", "基礎"),
        (15, "逆算", "基礎"),
        (16, "四則計算の文章題", "応用"),
        (17, "割合の定義と求め方", "基礎"),
        (18, "百分率・歩合の変換", "基礎"),
        (19, "割合を使った文章題（割引・割増）", "基礎"),
        (20, "利益・損失の計算", "応用"),
        (21, "複合割合（連続増減）", "応用"),
        (22, "逆割合", "応用"),
        (23, "濃度計算（基本型）", "応用"),
        (24, "濃度変化（加水・蒸発・混合）", "発展"),
        (25, "比の表し方と簡単化", "基礎"),
        (26, "内分・外分", "応用"),
        (27, "比例・反比例", "応用"),
        (28, "面積比・体積比（相似比からの変換）", "応用"),
        (29, "比を使った配分", "応用"),
        (30, "複比・連比の利用", "発展"),
        (31, "三角形の性質（角の和、外角）", "基礎"),
        (32, "特殊三角形（正三角形、二等辺三角形）", "基礎"),
        (33, "四角形の性質（平行四辺形、長方形、正方形、台形、ひし形）", "基礎"),
        (34, "多角形の内角・外角", "応用"),
        (35, "正多角形の性質", "応用"),
        (36, "円とおうぎ形（円周、弧の長さ、面積）", "応用"),
        (37, "作図（垂線、二等分線）", "応用"),
        (38, "直方体・立方体の体積・表面積", "基礎"),
        (39, "円柱・円錐・球の体積・表面積", "応用"),
        (40, "三角柱・四角錐・角錐の体積", "応用"),
        (41, "立体の展開図", "基礎"),
        (42, "切断面（平行・垂直）", "発展"),
        (43, "回転体（軌跡・体積）", "発展"),
        (44, "三角形の相似条件", "応用"),
        (45, "相似比の利用（長さ・面積・体積）", "応用"),
        (46, "三角形の合同条件", "基礎"),
        (47, "線対称・点対称", "基礎"),
        (48, "図形の移動（平行移動・回転移動）", "基礎"),
        (49, "重心・垂心・内心・外心", "発展"),
        (50, "作図と計量の融合問題", "発展"),
        (51, "長さ・重さ・かさの単位換算", "基礎"),
        (52, "面積（長方形、三角形、台形、ひし形、円）", "基礎"),
        (53, "体積（角柱、円柱、錐体、球）", "基礎"),
        (54, "表面積", "応用"),
        (55, "時間（時・分・秒、時間計算）", "基礎"),
        (56, "速さ（道のり＝速さ×時間）", "基礎"),
        (57, "速さの応用（旅人算、追いつき算、出会い算）", "応用"),
        (58, "平均の速さ", "応用"),
        (59, "つるかめ算（基本型）", "基礎"),
        (60, "つるかめ算の応用（端数、比率）", "応用"),
        (61, "旅人算（出会い・追いつき）", "応用"),
        (62, "通過算（列車・川の流れ）", "発展"),
        (63, "植木算（点・辺・距離）", "基礎"),
        (64, "和差算", "基礎"),
        (65, "差集め算", "応用"),
        (66, "倍数算", "応用"),
        (67, "仕事算（基本・応用）", "応用"),
        (68, "流水算", "発展"),
        (69, "年齢算", "応用"),
        (70, "相当算", "応用"),
        (71, "速さ・比・割合の融合", "発展"),
        (72, "過不足算", "応用"),
        (73, "消費税・利子計算（単利・複利）", "応用"),
        (74, "損益算（まとめ売り、合併売り）", "応用"),
        (75, "順列・組み合わせ（基本）", "応用"),
        (76, "樹形図", "基礎"),
        (77, "サイコロ・コインの確率", "基礎"),
        (78, "カードの確率", "応用"),
        (79, "重複を含む場合の数", "発展"),
        (80, "順列・組み合わせの応用（条件付き）", "発展"),
        (81, "表・グラフの読み取り（棒グラフ、折れ線グラフ、円グラフ）", "基礎"),
        (82, "複合グラフ（棒＋折れ線）", "応用"),
        (83, "ヒストグラム", "応用"),
        (84, "平均・中央値・最頻値", "基礎"),
        (85, "割合グラフ", "基礎"),
        (86, "散布図と相関関係", "発展"),
        (87, "相似を利用した影の長さ", "応用"),
        (88, "水そう算（容積と変化）", "発展"),
        (89, "立体の切断による断面積", "発展"),
        (90, "紙テープ・帯グラフ算", "応用"),
        (91, "規則性の問題（数列・図形）", "応用"),
        (92, "等差数列・等比数列（初歩）", "発展"),
        (93, "差のつき方のパターン", "応用"),
        (94, "数表算（マス目の規則）", "応用"),
        (95, "魔方陣", "発展"),
        (96, "時計算（針の角度）", "応用"),
        (97, "式による説明問題", "発展"),
        (98, "実験・観察を利用した応用問題", "応用"),
        (99, "中学受験頻出融合問題（速さ＋比、割合＋図形など）", "発展"),
        (100, "発展的確率（条件付き確率、場合分け）", "発展"),
    ]
    for i, name, diff in rows:
        db.add(MathTopic(id=i, name=name, difficulty=diff))
    db.commit()


