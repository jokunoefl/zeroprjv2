from sqlalchemy.orm import Session
from .models import Question, MathTopic, ScienceTopic, SocialTopic, MathDependency, ScienceDependency
import json
from datetime import datetime, timedelta

def seed_basic(db: Session):
    if db.query(Question).count() > 0:
        return
    questions = [
        Question(
            subject="算数",
            topic="割合",
            stem="みかんを原価の20%の利益で売ったところ、販売価格は1,200円でした。原価はいくらですか？",
            choices=None,
            answer=json.dumps({"primary": "1000", "variants": ["1000"]}),
            explanation="原価をXとすると、X * (1 + 20/100) = 1200。X = 1200 / 1.2 = 1000",
            difficulty=1.0,
            source="サンプル",
            school=None,
            year=None,
        ),
        Question(
            subject="算数", 
            topic="速さ",
            stem="時速60kmで走る車が2時間30分で進む距離は何kmですか？",
            choices=None,
            answer=json.dumps({"primary": "150", "variants": ["150"]}),
            explanation="距離 = 速さ × 時間 = 60 × 2.5 = 150km",
            difficulty=1.0,
            source="サンプル",
            school=None,
            year=None,
        ),
    ]
    for q in questions:
        db.add(q)
    db.commit()

def seed_math_topics(db: Session):
    if db.query(MathTopic).count() > 0:
        return
    rows = [
        (1, "整数の範囲", "基礎"),
        (2, "小数", "基礎"),
        (3, "分数", "基礎"),
        (4, "約分と通分", "基礎"),
        (5, "分数と小数の混合計算", "基礎"),
        (6, "四則混合算", "基礎"),
        (7, "累乗と指数", "基礎"),
        (8, "正負の数", "基礎"),
        (9, "整数の性質（倍数・約数）", "基礎"),
        (10, "最小公倍数・最大公約数", "基礎"),
        (11, "余りのある割り算", "基礎"),
        (12, "倍数算", "応用"),
        (13, "約数算", "応用"),
        (14, "整数の規則性", "応用"),
        (15, "数列の基礎", "応用"),
        (16, "割合", "基礎"),
        (17, "百分率・歩合", "基礎"),
        (18, "割合文章題", "応用"),
        (19, "利益・損失", "応用"),
        (20, "食塩水の濃度", "応用"),
        (21, "比の基礎", "基礎"),
        (22, "比の利用（内分・外分）", "応用"),
        (23, "連比", "応用"),
        (24, "比と割合の融合問題", "応用"),
        (25, "縮尺と地図", "応用"),
        (26, "速さの基礎", "基礎"),
        (27, "旅人算", "応用"),
        (28, "通過算", "応用"),
        (29, "追いつき算", "応用"),
        (30, "時計算", "応用"),
        (31, "流水算", "応用"),
        (32, "平均の速さ", "応用"),
        (33, "速さと比の融合", "発展"),
        (34, "ダイヤグラム", "発展"),
        (35, "速さの応用文章題", "発展"),
        (36, "平面図形の基礎", "基礎"),
        (37, "三角形の性質", "基礎"),
        (38, "四角形の性質", "基礎"),
        (39, "多角形の性質", "基礎"),
        (40, "円の性質", "基礎"),
        (41, "角度の計算", "基礎"),
        (42, "垂直と平行", "基礎"),
        (43, "作図", "基礎"),
        (44, "合同と相似", "応用"),
        (45, "相似比と面積比", "応用"),
        (46, "面積の求め方（基本図形）", "基礎"),
        (47, "面積の求め方（複合図形）", "応用"),
        (48, "面積比の応用", "応用"),
        (49, "立体図形の基礎", "基礎"),
        (50, "立体図形の体積", "基礎"),
        (51, "表面積の求め方", "基礎"),
        (52, "立体切断", "応用"),
        (53, "回転体", "応用"),
        (54, "見取り図と展開図", "応用"),
        (55, "影の問題", "応用"),
        (56, "投影図と展開図の融合", "発展"),
        (57, "断面図", "発展"),
        (58, "立体の相似比", "発展"),
        (59, "立体の複合体積", "発展"),
        (60, "立体図形の応用問題", "発展"),
        (61, "平均算", "基礎"),
        (62, "差集め算", "応用"),
        (63, "仕事算", "応用"),
        (64, "つるかめ算", "応用"),
        (65, "年齢算", "応用"),
        (66, "ニュートン算", "応用"),
        (67, "植木算", "応用"),
        (68, "方陣算", "応用"),
        (69, "倍数変化算", "応用"),
        (70, "消去算", "応用"),
        (71, "相当算", "応用"),
        (72, "順列・組み合わせ", "応用"),
        (73, "場合の数", "応用"),
        (74, "確率（基礎）", "基礎"),
        (75, "確率（応用）", "応用"),
        (76, "グラフの読み取り", "基礎"),
        (77, "表の読み取り", "基礎"),
        (78, "関数（比例・反比例）", "基礎"),
        (79, "簡単な一次方程式", "基礎"),
        (80, "方程式文章題", "応用"),
        (81, "連立方程式", "応用"),
        (82, "方程式の利用（割合・速さ）", "応用"),
        (83, "不等式", "応用"),
        (84, "座標の基礎", "基礎"),
        (85, "座標幾何の応用", "応用"),
        (86, "規則性の応用", "応用"),
        (87, "数のパズル", "応用"),
        (88, "図形のパズル", "応用"),
        (89, "融合文章題（割合・速さ）", "発展"),
        (90, "融合文章題（図形・比）", "発展"),
        (91, "過去問頻出パターン1", "発展"),
        (92, "過去問頻出パターン2", "発展"),
        (93, "過去問頻出パターン3", "発展"),
        (94, "模試頻出テーマ1", "発展"),
        (95, "模試頻出テーマ2", "発展"),
        (96, "模試頻出テーマ3", "発展"),
        (97, "難関校オリジナル問題1", "発展"),
        (98, "難関校オリジナル問題2", "発展"),
        (99, "難関校オリジナル問題3", "発展"),
        (100, "難関校オリジナル問題4", "発展"),
    ]
    for i, name, diff in rows:
        db.add(MathTopic(id=i, name=name, difficulty=diff))
    db.commit()

def seed_math_dependencies(db: Session):
    if db.query(MathDependency).count() > 0:
        return
    dependencies = [
        (1, "整数の範囲", None, "小数"),
        (2, "小数", "整数の範囲", "分数"),
        (3, "分数", "小数", "約分と通分"),
        (4, "約分と通分", "分数", "分数と小数の混合計算"),
        (5, "分数と小数の混合計算", "約分と通分", "四則混合算"),
        (6, "四則混合算", "分数と小数の混合計算", "累乗と指数"),
        (7, "累乗と指数", "四則混合算", "正負の数"),
        (8, "正負の数", "累乗と指数", "整数の性質（倍数・約数）"),
        (9, "整数の性質（倍数・約数）", "正負の数", "最小公倍数・最大公約数"),
        (10, "最小公倍数・最大公約数", "整数の性質（倍数・約数）", "余りのある割り算"),
        (11, "余りのある割り算", "最小公倍数・最大公約数", "倍数算"),
        (12, "倍数算", "余りのある割り算", "約数算"),
        (13, "約数算", "倍数算", "整数の規則性"),
        (14, "整数の規則性", "約数算", "数列の基礎"),
        (15, "数列の基礎", "整数の規則性", "割合"),
        (16, "割合", "数列の基礎", "百分率・歩合"),
        (17, "百分率・歩合", "割合", "割合文章題"),
        (18, "割合文章題", "百分率・歩合", "利益・損失"),
        (19, "利益・損失", "割合文章題", "食塩水の濃度"),
        (20, "食塩水の濃度", "利益・損失", "比の基礎"),
        (21, "比の基礎", "食塩水の濃度", "比の利用（内分・外分）"),
        (22, "比の利用（内分・外分）", "比の基礎", "連比"),
        (23, "連比", "比の利用（内分・外分）", "比と割合の融合問題"),
        (24, "比と割合の融合問題", "連比", "縮尺と地図"),
        (25, "縮尺と地図", "比と割合の融合問題", "速さの基礎"),
        (26, "速さの基礎", "縮尺と地図", "旅人算"),
        (27, "旅人算", "速さの基礎", "通過算"),
        (28, "通過算", "旅人算", "追いつき算"),
        (29, "追いつき算", "通過算", "時計算"),
        (30, "時計算", "追いつき算", "流水算"),
        (31, "流水算", "時計算", "平均の速さ"),
        (32, "平均の速さ", "流水算", "速さと比の融合"),
        (33, "速さと比の融合", "平均の速さ", "ダイヤグラム"),
        (34, "ダイヤグラム", "速さと比の融合", "速さの応用文章題"),
        (35, "速さの応用文章題", "ダイヤグラム", "平面図形の基礎"),
        (36, "平面図形の基礎", "速さの応用文章題", "三角形の性質"),
        (37, "三角形の性質", "平面図形の基礎", "四角形の性質"),
        (38, "四角形の性質", "三角形の性質", "多角形の性質"),
        (39, "多角形の性質", "四角形の性質", "円の性質"),
        (40, "円の性質", "多角形の性質", "角度の計算"),
        (41, "角度の計算", "円の性質", "垂直と平行"),
        (42, "垂直と平行", "角度の計算", "作図"),
        (43, "作図", "垂直と平行", "合同と相似"),
        (44, "合同と相似", "作図", "相似比と面積比"),
        (45, "相似比と面積比", "合同と相似", "面積の求め方（基本図形）"),
        (46, "面積の求め方（基本図形）", "相似比と面積比", "面積の求め方（複合図形）"),
        (47, "面積の求め方（複合図形）", "面積の求め方（基本図形）", "面積比の応用"),
        (48, "面積比の応用", "面積の求め方（複合図形）", "立体図形の基礎"),
        (49, "立体図形の基礎", "面積比の応用", "立体図形の体積"),
        (50, "立体図形の体積", "立体図形の基礎", "表面積の求め方"),
        (51, "表面積の求め方", "立体図形の体積", "立体切断"),
        (52, "立体切断", "表面積の求め方", "回転体"),
        (53, "回転体", "立体切断", "見取り図と展開図"),
        (54, "見取り図と展開図", "回転体", "影の問題"),
        (55, "影の問題", "見取り図と展開図", "投影図と展開図の融合"),
        (56, "投影図と展開図の融合", "影の問題", "断面図"),
        (57, "断面図", "投影図と展開図の融合", "立体の相似比"),
        (58, "立体の相似比", "断面図", "立体の複合体積"),
        (59, "立体の複合体積", "立体の相似比", "立体図形の応用問題"),
        (60, "立体図形の応用問題", "立体の複合体積", "平均算"),
        (61, "平均算", "立体図形の応用問題", "差集め算"),
        (62, "差集め算", "平均算", "仕事算"),
        (63, "仕事算", "差集め算", "つるかめ算"),
        (64, "つるかめ算", "仕事算", "年齢算"),
        (65, "年齢算", "つるかめ算", "ニュートン算"),
        (66, "ニュートン算", "年齢算", "植木算"),
        (67, "植木算", "ニュートン算", "方陣算"),
        (68, "方陣算", "植木算", "倍数変化算"),
        (69, "倍数変化算", "方陣算", "消去算"),
        (70, "消去算", "倍数変化算", "相当算"),
        (71, "相当算", "消去算", "順列・組み合わせ"),
        (72, "順列・組み合わせ", "相当算", "場合の数"),
        (73, "場合の数", "順列・組み合わせ", "確率（基礎）"),
        (74, "確率（基礎）", "場合の数", "確率（応用）"),
        (75, "確率（応用）", "確率（基礎）", "グラフの読み取り"),
        (76, "グラフの読み取り", "確率（応用）", "表の読み取り"),
        (77, "表の読み取り", "グラフの読み取り", "関数（比例・反比例）"),
        (78, "関数（比例・反比例）", "表の読み取り", "簡単な一次方程式"),
        (79, "簡単な一次方程式", "関数（比例・反比例）", "方程式文章題"),
        (80, "方程式文章題", "簡単な一次方程式", "連立方程式"),
        (81, "連立方程式", "方程式文章題", "方程式の利用（割合・速さ）"),
        (82, "方程式の利用（割合・速さ）", "連立方程式", "不等式"),
        (83, "不等式", "方程式の利用（割合・速さ）", "座標の基礎"),
        (84, "座標の基礎", "不等式", "座標幾何の応用"),
        (85, "座標幾何の応用", "座標の基礎", "規則性の応用"),
        (86, "規則性の応用", "座標幾何の応用", "数のパズル"),
        (87, "数のパズル", "規則性の応用", "図形のパズル"),
        (88, "図形のパズル", "数のパズル", "融合文章題（割合・速さ）"),
        (89, "融合文章題（割合・速さ）", "図形のパズル", "融合文章題（図形・比）"),
        (90, "融合文章題（図形・比）", "融合文章題（割合・速さ）", "過去問頻出パターン1"),
        (91, "過去問頻出パターン1", "融合文章題（図形・比）", "過去問頻出パターン2"),
        (92, "過去問頻出パターン2", "過去問頻出パターン1", "過去問頻出パターン3"),
        (93, "過去問頻出パターン3", "過去問頻出パターン2", "模試頻出テーマ1"),
        (94, "模試頻出テーマ1", "過去問頻出パターン3", "模試頻出テーマ2"),
        (95, "模試頻出テーマ2", "模試頻出テーマ1", "模試頻出テーマ3"),
        (96, "模試頻出テーマ3", "模試頻出テーマ2", "難関校オリジナル問題1"),
        (97, "難関校オリジナル問題1", "模試頻出テーマ3", "難関校オリジナル問題2"),
        (98, "難関校オリジナル問題2", "難関校オリジナル問題1", "難関校オリジナル問題3"),
        (99, "難関校オリジナル問題3", "難関校オリジナル問題2", "難関校オリジナル問題4"),
        (100, "難関校オリジナル問題4", "難関校オリジナル問題3", None),
    ]
    for i, topic_name, prerequisite, next_topic in dependencies:
        # math_topicsとの紐付けを取得
        math_topic = db.query(MathTopic).filter(MathTopic.name == topic_name).first()
        topic_id = math_topic.id if math_topic else None
        
        db.add(MathDependency(
            id=i,
            topic_name=topic_name,
            prerequisite_topic=prerequisite,
            next_topic=next_topic,
            topic_id=topic_id
        ))
    db.commit()

def seed_science_topics(db: Session):
    if db.query(ScienceTopic).count() > 0:
        return
    rows = [
        # 物理 1-25
        (1, "物理", "力と運動の基礎", "基礎"),
        (2, "物理", "重力と質量・重さ", "基礎"),
        (3, "物理", "摩擦力と空気抵抗", "基礎"),
        (4, "物理", "圧力と浮力", "基礎"),
        (5, "物理", "てこと滑車", "基礎"),
        (6, "物理", "振り子の運動", "基礎"),
        (7, "物理", "音の性質", "基礎"),
        (8, "物理", "光の直進と反射", "基礎"),
        (9, "物理", "光の屈折", "基礎"),
        (10, "物理", "凸レンズと凹レンズ", "基礎"),
        (11, "物理", "電流と電圧", "基礎"),
        (12, "物理", "電気抵抗とオームの法則", "基礎"),
        (13, "物理", "直列回路と並列回路", "基礎"),
        (14, "物理", "磁石と磁力", "基礎"),
        (15, "物理", "電磁誘導", "基礎"),
        (16, "物理", "エネルギー変換", "基礎"),
        (17, "物理", "熱と温度", "基礎"),
        (18, "物理", "熱の伝わり方", "基礎"),
        (19, "物理", "物質の状態変化", "基礎"),
        (20, "物理", "波の性質", "応用"),
        (21, "物理", "運動エネルギーと位置エネルギー", "応用"),
        (22, "物理", "仕事とエネルギー", "応用"),
        (23, "物理", "電力と電力量", "応用"),
        (24, "物理", "力学的エネルギー保存", "発展"),
        (25, "物理", "波動と音・光の応用", "発展"),
        # 化学 26-50
        (26, "化学", "物質の性質と分類", "基礎"),
        (27, "化学", "純物質と混合物", "基礎"),
        (28, "化学", "元素と化合物", "基礎"),
        (29, "化学", "原子と分子", "基礎"),
        (30, "化学", "化学式と化学反応式", "基礎"),
        (31, "化学", "質量保存の法則", "基礎"),
        (32, "化学", "定比例の法則", "基礎"),
        (33, "化学", "気体の性質", "基礎"),
        (34, "化学", "水溶液の性質", "基礎"),
        (35, "化学", "溶解度と再結晶", "基礎"),
        (36, "化学", "酸とアルカリ", "基礎"),
        (37, "化学", "中和反応", "基礎"),
        (38, "化学", "pHと指示薬", "基礎"),
        (39, "化学", "酸化と還元", "基礎"),
        (40, "化学", "燃焼反応", "基礎"),
        (41, "化学", "金属の性質", "基礎"),
        (42, "化学", "金属の反応性", "基礎"),
        (43, "化学", "イオンとイオン結合", "応用"),
        (44, "化学", "共有結合", "応用"),
        (45, "化学", "有機化合物", "応用"),
        (46, "化学", "高分子化合物", "応用"),
        (47, "化学", "化学変化とエネルギー", "応用"),
        (48, "化学", "触媒と反応速度", "発展"),
        (49, "化学", "化学平衡", "発展"),
        (50, "化学", "環境と化学", "発展"),
        # 生物 51-75
        (51, "生物", "生物の特徴と分類", "基礎"),
        (52, "生物", "植物の体のつくり", "基礎"),
        (53, "生物", "植物の成長と発芽", "基礎"),
        (54, "生物", "光合成と呼吸", "基礎"),
        (55, "生物", "植物の水分と養分の通り道", "基礎"),
        (56, "生物", "植物の受粉と受精", "基礎"),
        (57, "生物", "動物の体のつくり", "基礎"),
        (58, "生物", "消化と吸収", "基礎"),
        (59, "生物", "血液循環", "基礎"),
        (60, "生物", "呼吸と排出", "基礎"),
        (61, "生物", "感覚器官と神経", "基礎"),
        (62, "生物", "骨格と筋肉", "基礎"),
        (63, "生物", "生殖と発生", "基礎"),
        (64, "生物", "遺伝の法則", "基礎"),
        (65, "生物", "細胞のつくりとはたらき", "基礎"),
        (66, "生物", "細胞分裂", "基礎"),
        (67, "生物", "生物の進化", "基礎"),
        (68, "生物", "生態系と食物連鎖", "基礎"),
        (69, "生物", "環境と生物", "基礎"),
        (70, "生物", "人体の調節機能", "応用"),
        (71, "生物", "免疫と病気", "応用"),
        (72, "生物", "遺伝子とDNA", "応用"),
        (73, "生物", "生物多様性", "応用"),
        (74, "生物", "生物と環境の相互作用", "発展"),
        (75, "生物", "バイオテクノロジー", "発展"),
        # 地学 76-90
        (76, "地学", "地球の形と大きさ", "基礎"),
        (77, "地学", "地球の内部構造", "基礎"),
        (78, "地学", "岩石と鉱物", "基礎"),
        (79, "地学", "地層と化石", "基礎"),
        (80, "地学", "地震と火山", "基礎"),
        (81, "地学", "プレートテクトニクス", "基礎"),
        (82, "地学", "大気の構造", "基礎"),
        (83, "地学", "気圧と風", "基礎"),
        (84, "地学", "雲と降水", "基礎"),
        (85, "地学", "天気の変化", "基礎"),
        (86, "地学", "気候と気象", "基礎"),
        (87, "地学", "太陽系と惑星", "基礎"),
        (88, "地学", "月と地球", "基礎"),
        (89, "地学", "星と星座", "基礎"),
        (90, "地学", "銀河と宇宙", "基礎"),
        # 総合 91-100
        (91, "総合", "科学技術と社会", "応用"),
        (92, "総合", "環境問題と科学", "応用"),
        (93, "総合", "エネルギーと資源", "応用"),
        (94, "総合", "科学実験と観察", "応用"),
        (95, "総合", "科学史と発見", "応用"),
        (96, "総合", "科学と倫理", "発展"),
        (97, "総合", "科学と未来社会", "発展"),
        (98, "総合", "科学と国際協力", "発展"),
        (99, "総合", "科学と文化", "発展"),
        (100, "総合", "科学と持続可能な開発", "発展"),
    ]
    for i, domain, name, diff in rows:
        db.add(ScienceTopic(id=i, domain=domain, name=name, difficulty=diff))
    db.commit()

def seed_science_dependencies(db: Session):
    if db.query(ScienceDependency).count() > 0:
        return
    dependencies = [
        # 物理 1-20
        (1, "物理", "光の性質（反射・屈折）", "観察記録の取り方; 質量・体積の測定", "光の作図（鏡・レンズ）"),
        (2, "物理", "光の作図（鏡・レンズ）", "光の性質（反射・屈折）", "音の性質（高さ・大きさ・波）"),
        (3, "物理", "音の性質（高さ・大きさ・波）", "光の作図（鏡・レンズ）", "音の伝わり方（空気・水・金属）"),
        (4, "物理", "音の伝わり方（空気・水・金属）", "音の性質（高さ・大きさ・波）", "電流と回路（直列・並列）"),
        (5, "物理", "電流と回路（直列・並列）", "実験器具の安全な使い方; 観察記録の取り方", "オームの法則と応用計算; 電磁石の性質"),
        (6, "物理", "オームの法則と応用計算", "電流と回路（直列・並列）", "電磁石の性質; 電磁誘導と応用"),
        (7, "物理", "電磁石の性質", "電流と回路（直列・並列）", "電磁誘導と応用"),
        (8, "物理", "電磁誘導と応用", "電磁石の性質; オームの法則と応用計算", "力のはたらき（てこ・滑車）"),
        (9, "物理", "力のはたらき（てこ・滑車）", "電磁誘導と応用", "力のつり合いとモーメント計算"),
        (10, "物理", "力のつり合いとモーメント計算", "力のはたらき（てこ・滑車）", "浮力と密度の計算"),
        (11, "物理", "浮力と密度の計算", "質量・体積の測定", "ばねののび（フックの法則）"),
        (12, "物理", "ばねののび（フックの法則）", "質量・体積の測定", "気圧と水圧"),
        (13, "物理", "気圧と水圧", "ばねののび（フックの法則）", "熱の伝わり方（伝導・対流・放射）"),
        (14, "物理", "熱の伝わり方（伝導・対流・放射）", "気圧と水圧", "熱膨張と温度変化"),
        (15, "物理", "熱膨張と温度変化", "熱の伝わり方（伝導・対流・放射）", "エネルギーの変換と保存"),
        (16, "物理", "エネルギーの変換と保存", "", "仕事と仕事率"),
        (17, "物理", "仕事と仕事率", "エネルギーの変換と保存", "運動と速さ・加速度"),
        (18, "物理", "運動と速さ・加速度", "仕事と仕事率", "摩擦力の影響"),
        (19, "物理", "摩擦力の影響", "運動と速さ・加速度", "慣性の法則"),
        (20, "物理", "慣性の法則", "摩擦力の影響", ""),
        # 化学 21-40
        (21, "化学", "状態変化（融解・凝固・蒸発・沸騰・凝縮）", "", "物質の分類（純物質・混合物）"),
        (22, "化学", "物質の分類（純物質・混合物）", "状態変化（融解・凝固・蒸発・沸騰・凝縮）", "気体の発生方法と性質"),
        (23, "化学", "気体の発生方法と性質", "物質の分類（純物質・混合物）", "水溶液の性質（酸・アルカリ・中和）"),
        (24, "化学", "水溶液の性質（酸・アルカリ・中和）", "気体の発生方法と性質", "中和計算; 溶解度と再結晶; 濃度の測定方法"),
        (25, "化学", "中和計算", "水溶液の性質（酸・アルカリ・中和）", "溶解度と再結晶"),
        (26, "化学", "溶解度と再結晶", "水溶液の性質（酸・アルカリ・中和）", "蒸留・ろ過・再結晶の方法"),
        (27, "化学", "蒸留・ろ過・再結晶の方法", "溶解度と再結晶", "金属・非金属の性質"),
        (28, "化学", "金属・非金属の性質", "蒸留・ろ過・再結晶の方法", "金属と酸の反応"),
        (29, "化学", "金属と酸の反応", "金属・非金属の性質", "酸化と還元"),
        (30, "化学", "酸化と還元", "金属と酸の反応; 原子・分子の構造", "燃焼と熱量計算"),
        (31, "化学", "燃焼と熱量計算", "酸化と還元", "プラスチックの種類と性質"),
        (32, "化学", "プラスチックの種類と性質", "燃焼と熱量計算", "化学変化と質量保存の法則"),
        (33, "化学", "化学変化と質量保存の法則", "状態変化（融解・凝固・蒸発・沸騰・凝縮）", "原子・分子の構造"),
        (34, "化学", "原子・分子の構造", "化学変化と質量保存の法則", "イオンと電気伝導; 光合成における化学反応式; 化学結合の種類"),
        (35, "化学", "イオンと電気伝導", "原子・分子の構造", "電気分解"),
        (36, "化学", "電気分解", "イオンと電気伝導; 水溶液の性質（酸・アルカリ・中和）", "光合成における化学反応式"),
        (37, "化学", "光合成における化学反応式", "光合成と呼吸; 原子・分子の構造", "化学反応の速さに影響する要因"),
        (38, "化学", "化学反応の速さに影響する要因", "光合成における化学反応式", "酸化数と化学式の決定"),
        (39, "化学", "酸化数と化学式の決定", "化学反応の速さに影響する要因", "化学結合の種類"),
        (40, "化学", "化学結合の種類", "酸化数と化学式の決定", ""),
        # 生物 41-60
        (41, "生物", "植物の分類と特徴", "", "光合成と呼吸"),
        (42, "生物", "光合成と呼吸", "植物の分類と特徴", "種子の発芽条件"),
        (43, "生物", "種子の発芽条件", "光合成と呼吸", "花のつくりとはたらき"),
        (44, "生物", "花のつくりとはたらき", "種子の発芽条件", "受粉と受精"),
        (45, "生物", "受粉と受精", "花のつくりとはたらき", "果実と種子の散布方法"),
        (46, "生物", "果実と種子の散布方法", "受粉と受精", "動物の分類（無脊椎・脊椎）"),
        (47, "生物", "動物の分類（無脊椎・脊椎）", "果実と種子の散布方法", "哺乳類・鳥類・爬虫類・両生類・魚類の特徴"),
        (48, "生物", "哺乳類・鳥類・爬虫類・両生類・魚類の特徴", "動物の分類（無脊椎・脊椎）", "食物連鎖と生態系"),
        (49, "生物", "食物連鎖と生態系", "哺乳類・鳥類・爬虫類・両生類・魚類の特徴", "外来種と生態系のバランス"),
        (50, "生物", "外来種と生態系のバランス", "食物連鎖と生態系", "動物の骨格と筋肉"),
        (51, "生物", "動物の骨格と筋肉", "外来種と生態系のバランス", "呼吸器系・循環器系"),
        (52, "生物", "呼吸器系・循環器系", "動物の骨格と筋肉", "消化器系と消化酵素"),
        (53, "生物", "消化器系と消化酵素", "呼吸器系・循環器系", "神経系と感覚器官"),
        (54, "生物", "神経系と感覚器官", "消化器系と消化酵素", "生殖と発生"),
        (55, "生物", "生殖と発生", "受粉と受精", "細胞分裂と遺伝"),
        (56, "生物", "細胞分裂と遺伝", "生殖と発生", "DNAの構造と働き"),
        (57, "生物", "DNAの構造と働き", "細胞分裂と遺伝", "進化と適応"),
        (58, "生物", "進化と適応", "DNAの構造と働き; 動物の分類（無脊椎・脊椎）", "季節と動植物の生活"),
        (59, "生物", "季節と動植物の生活", "進化と適応", "環境問題と保全活動"),
        (60, "生物", "環境問題と保全活動", "季節と動植物の生活", ""),
        # 地学 61-80
        (61, "地学", "地層と化石", "", "火山と火成岩"),
        (62, "地学", "火山と火成岩", "地層と化石", "地震の仕組みと震度・マグニチュード"),
        (63, "地学", "地震の仕組みと震度・マグニチュード", "地層と化石", "プレートテクトニクス"),
        (64, "地学", "プレートテクトニクス", "地震の仕組みと震度・マグニチュード", "気象の観測（温度・湿度・気圧）"),
        (65, "地学", "気象の観測（温度・湿度・気圧）", "プレートテクトニクス", "雲の種類と天気の変化"),
        (66, "地学", "雲の種類と天気の変化", "気象の観測（温度・湿度・気圧）", "低気圧・高気圧の性質"),
        (67, "地学", "低気圧・高気圧の性質", "雲の種類と天気の変化", "前線の種類と天気図の読み取り"),
        (68, "地学", "前線の種類と天気図の読み取り", "低気圧・高気圧の性質", "台風の構造と進路予測"),
        (69, "地学", "台風の構造と進路予測", "前線の種類と天気図の読み取り", "気候帯と世界の気候"),
        (70, "地学", "気候帯と世界の気候", "台風の構造と進路予測", "地球の自転と公転"),
        (71, "地学", "地球の自転と公転", "気候帯と世界の気候", "季節の変化の理由; 複合分野融合問題（例: 力学＋天体）"),
        (72, "地学", "季節の変化の理由", "地球の自転と公転", "月の満ち欠け"),
        (73, "地学", "月の満ち欠け", "季節の変化の理由", "日食と月食"),
        (74, "地学", "日食と月食", "月の満ち欠け", "太陽系の惑星と特徴"),
        (75, "地学", "太陽系の惑星と特徴", "日食と月食", "恒星と銀河"),
        (76, "地学", "恒星と銀河", "太陽系の惑星と特徴", "宇宙の膨張とビッグバン"),
        (77, "地学", "宇宙の膨張とビッグバン", "恒星と銀河", "宇宙探査の歴史と未来"),
        (78, "地学", "宇宙探査の歴史と未来", "宇宙の膨張とビッグバン", "海流と海洋大循環"),
        (79, "地学", "海流と海洋大循環", "宇宙探査の歴史と未来", "地球温暖化と気候変動"),
        (80, "地学", "地球温暖化と気候変動", "気候帯と世界の気候", ""),
        # 総合 81-100
        (81, "総合", "観察記録の取り方", "", "顕微鏡の使い方; 実験器具の安全な使い方; データ整理とグラフ化"),
        (82, "総合", "顕微鏡の使い方", "観察記録の取り方", "実験器具の安全な使い方"),
        (83, "総合", "実験器具の安全な使い方", "顕微鏡の使い方", "質量・体積の測定"),
        (84, "総合", "質量・体積の測定", "実験器具の安全な使い方", "濃度の測定方法"),
        (85, "総合", "濃度の測定方法", "質量・体積の測定; 水溶液の性質（酸・アルカリ・中和）", "気体検知管の使い方"),
        (86, "総合", "気体検知管の使い方", "気体の発生方法と性質; 実験器具の安全な使い方", "データ整理とグラフ化"),
        (87, "総合", "データ整理とグラフ化", "気体検知管の使い方", "誤差の原因と対策"),
        (88, "総合", "誤差の原因と対策", "質量・体積の測定; データ整理とグラフ化", "仮説検証型実験"),
        (89, "総合", "仮説検証型実験", "観察記録の取り方; データ整理とグラフ化; 誤差の原因と対策", "探究型学習の計画"),
        (90, "総合", "探究型学習の計画", "仮説検証型実験", "複合分野融合問題（例: 化学反応＋気象）"),
        (91, "総合", "複合分野融合問題（例: 化学反応＋気象）", "水溶液の性質（酸・アルカリ・中和）; 前線の種類と天気図の読み取り", "複合分野融合問題（例: 力学＋天体）"),
        (92, "総合", "複合分野融合問題（例: 力学＋天体）", "運動と速さ・加速度; 地球の自転と公転", "複合分野融合問題（例: 生物＋環境）"),
        (93, "総合", "複合分野融合問題（例: 生物＋環境）", "食物連鎖と生態系; 地球温暖化と気候変動", "過去問に見る理科の頻出テーマ"),
        (94, "総合", "過去問に見る理科の頻出テーマ", "複合分野融合問題（例: 生物＋環境）", "最新科学ニュースの応用問題"),
        (95, "総合", "最新科学ニュースの応用問題", "過去問に見る理科の頻出テーマ", "科学史の重要発見"),
        (96, "総合", "科学史の重要発見", "最新科学ニュースの応用問題", "環境保全と持続可能性"),
        (97, "総合", "環境保全と持続可能性", "科学史の重要発見", "理科自由研究のテーマ設定"),
        (98, "総合", "理科自由研究のテーマ設定", "環境保全と持続可能性", "研究結果の発表方法"),
        (99, "総合", "研究結果の発表方法", "理科自由研究のテーマ設定; データ整理とグラフ化", "理科における論理的思考力問題"),
        (100, "総合", "理科における論理的思考力問題", "仮説検証型実験; 誤差の原因と対策", ""),
    ]
    for i, domain, topic_name, prerequisites, next_topics in dependencies:
        # science_topicsとの紐付けを取得
        science_topic = db.query(ScienceTopic).filter(ScienceTopic.name == topic_name).first()
        topic_id = science_topic.id if science_topic else None
        
        db.add(ScienceDependency(
            id=i,
            domain=domain,
            topic_name=topic_name,
            prerequisite_topics=prerequisites if prerequisites else None,
            next_topics=next_topics if next_topics else None,
            topic_id=topic_id
        ))
    db.commit()

def seed_social_topics(db: Session):
    if db.query(SocialTopic).count() > 0:
        return
    rows = [
        # 地理 1-25
        (1, "地理", "日本の都道府県と県庁所在地", "基礎"),
        (2, "地理", "日本の地方区分（8地方区分）", "基礎"),
        (3, "地理", "日本の主要山地・山脈・山岳", "基礎"),
        (4, "地理", "日本の主要河川と流域", "基礎"),
        (5, "地理", "日本の主要平野と盆地", "基礎"),
        (6, "地理", "日本の気候区分", "基礎"),
        (7, "地理", "季節風と降水量の分布", "応用"),
        (8, "地理", "農業地域の特徴（稲作・畑作・酪農）", "基礎"),
        (9, "地理", "漁業の種類と漁場", "基礎"),
        (10, "地理", "工業地域の特徴（太平洋ベルトなど）", "基礎"),
        (11, "地理", "交通網の発達と都市の発展", "応用"),
        (12, "地理", "過疎化・過密化の地域問題", "応用"),
        (13, "地理", "エネルギー資源と発電方法", "応用"),
        (14, "地理", "自然災害と防災", "応用"),
        (15, "地理", "日本の観光地と文化財", "基礎"),
        (16, "地理", "世界の大陸と海洋", "基礎"),
        (17, "地理", "世界の主要国と首都", "基礎"),
        (18, "地理", "世界の気候帯", "基礎"),
        (19, "地理", "世界の農業形態", "応用"),
        (20, "地理", "世界の主要な工業地域", "応用"),
        (21, "地理", "国際貿易と物流", "応用"),
        (22, "地理", "地球規模の環境問題", "発展"),
        (23, "地理", "地図記号と地形図の読み方", "基礎"),
        (24, "地理", "緯度・経度と時差計算", "応用"),
        (25, "地理", "GIS（地理情報システム）の活用", "発展"),
        # 歴史 26-50
        (26, "歴史", "旧石器時代と縄文時代の暮らし", "基礎"),
        (27, "歴史", "弥生時代と稲作の伝来", "基礎"),
        (28, "歴史", "古墳時代と大和政権", "基礎"),
        (29, "歴史", "飛鳥時代と大化の改新", "基礎"),
        (30, "歴史", "奈良時代と平城京", "基礎"),
        (31, "歴史", "平安時代の貴族文化", "基礎"),
        (32, "歴史", "鎌倉時代と武士の台頭", "基礎"),
        (33, "歴史", "室町時代と戦国時代", "基礎"),
        (34, "歴史", "安土桃山時代と天下統一", "基礎"),
        (35, "歴史", "江戸時代の政治と身分制度", "基礎"),
        (36, "歴史", "江戸時代の文化（元禄・化政）", "基礎"),
        (37, "歴史", "鎖国と海外交流", "応用"),
        (38, "歴史", "幕末の動乱と明治維新", "応用"),
        (39, "歴史", "明治時代の近代化", "基礎"),
        (40, "歴史", "日清戦争・日露戦争", "応用"),
        (41, "歴史", "大正デモクラシー", "基礎"),
        (42, "歴史", "昭和時代前期と戦争", "基礎"),
        (43, "歴史", "第二次世界大戦", "基礎"),
        (44, "歴史", "戦後復興と高度経済成長", "基礎"),
        (45, "歴史", "現代日本の国際関係", "応用"),
        (46, "歴史", "世界史の主要文明（四大文明）", "基礎"),
        (47, "歴史", "ルネサンスと宗教改革", "応用"),
        (48, "歴史", "産業革命と資本主義の発展", "応用"),
        (49, "歴史", "世界大戦と冷戦", "応用"),
        (50, "歴史", "21世紀の国際情勢", "発展"),
        # 公民 51-70
        (51, "公民", "日本国憲法の三大原則", "基礎"),
        (52, "公民", "基本的人権の種類", "基礎"),
        (53, "公民", "三権分立の仕組み", "基礎"),
        (54, "公民", "国会の役割と仕組み", "基礎"),
        (55, "公民", "内閣の役割と行政機関", "基礎"),
        (56, "公民", "裁判所の役割", "基礎"),
        (57, "公民", "地方自治と住民参加", "基礎"),
        (58, "公民", "選挙制度と政治参加", "基礎"),
        (59, "公民", "政党と政治資金", "応用"),
        (60, "公民", "国際連合と国際協力", "基礎"),
        (61, "公民", "市場経済の仕組み", "基礎"),
        (62, "公民", "需要と供給の関係", "基礎"),
        (63, "公民", "金融の役割と日銀の機能", "応用"),
        (64, "公民", "税金の種類と役割", "基礎"),
        (65, "公民", "社会保障制度", "基礎"),
        (66, "公民", "持続可能な社会と環境保護", "応用"),
        (67, "公民", "情報化社会と個人情報保護", "応用"),
        (68, "公民", "グローバル化と日本経済", "応用"),
        (69, "公民", "人口問題と少子高齢化", "応用"),
        (70, "公民", "国際平和と安全保障", "発展"),
        # 総合 71-100
        (71, "総合", "地理・歴史・公民融合問題（地名と歴史出来事）", "応用"),
        (72, "総合", "地理・歴史・公民融合問題（産業と政治制度）", "応用"),
        (73, "総合", "統計資料の読み取り（人口・GDP・気温）", "応用"),
        (74, "総合", "地図と統計の複合問題", "応用"),
        (75, "総合", "過去問頻出テーマ分析", "応用"),
        (76, "総合", "時事問題（国内政治）", "応用"),
        (77, "総合", "時事問題（国際情勢）", "応用"),
        (78, "総合", "国際条約と環境問題", "応用"),
        (79, "総合", "国際的なスポーツ大会と平和活動", "基礎"),
        (80, "総合", "SDGs（持続可能な開発目標）", "応用"),
        (81, "総合", "災害対策と国際協力", "応用"),
        (82, "総合", "日本の文化と世界遺産", "基礎"),
        (83, "総合", "世界の文化遺産と自然遺産", "基礎"),
        (84, "総合", "民族と宗教の多様性", "応用"),
        (85, "総合", "国際経済機関の役割（WTO・IMFなど）", "発展"),
        (86, "総合", "国際政治の枠組み（G7・G20）", "発展"),
        (87, "総合", "平和構築活動とPKO", "発展"),
        (88, "総合", "エネルギー安全保障", "発展"),
        (89, "総合", "情報リテラシーとフェイクニュース対策", "応用"),
        (90, "総合", "国際比較で見る社会制度", "発展"),
        (91, "総合", "地域振興と観光政策", "応用"),
        (92, "総合", "地方創生と移住促進", "応用"),
        (93, "総合", "過疎地域の課題と解決策", "応用"),
        (94, "総合", "都市再開発の事例", "応用"),
        (95, "総合", "日本の人口ピラミッドの変化", "応用"),
        (96, "総合", "高齢化社会の福祉政策", "応用"),
        (97, "総合", "若者政策と教育改革", "応用"),
        (98, "総合", "働き方改革と雇用制度", "応用"),
        (99, "総合", "科学技術と社会", "応用"),
        (100, "総合", "未来の社会像と課題予測", "発展"),
    ]
    for i, domain, name, diff in rows:
        db.add(SocialTopic(id=i, domain=domain, name=name, difficulty=diff))
    db.commit()


